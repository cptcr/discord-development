{
    "compilerOptions": {
      /* Target modern ECMAScript features that Node.js supports (Node 16/18 often supports ES2020+). */
      "target": "ES2020", 
      
      /* Use CommonJS for Node.js. If you prefer ESM, you can change this to "module": "NodeNext" or "Node16", 
         but be sure to update your package.json or file extensions accordingly. */
      "module": "CommonJS", 
  
      /* Tells TypeScript where to output .js files after compilation. */
      "outDir": "dist", 
  
      /* Tells TypeScript what the "root" folder of your source code is (the place to start). 
         If you keep code in both "src" and "dev", you can omit rootDir, or set it to ".". */
      "rootDir": ".", 
  
      /* Ensure strict type-checking across the project. Enable if needed.
         This includes strictNullChecks, noImplicitAny, etc. */
      "strict": false, 
  
      /* Enables the "interop" behavior so you can do default imports from CommonJS modules, 
         like "import fs from 'fs'". Without this, you'd have to do "import * as fs from 'fs'". */
      "esModuleInterop": true,
      
      /* Additional modern resolution features. If you prefer the older Node resolution, 
         you can set "moduleResolution": "node". 
         For Node 16/18 with ESM and TS, "node16" or "nodenext" can be used. */
      "moduleResolution": "node",
  
      /* Allows importing .json files directly, typed as JSON. */
      "resolveJsonModule": true,
  
      /* Ensures that file name casing is treated consistently across different operating systems. */
      "forceConsistentCasingInFileNames": true,
  
      /* Allows default imports from modules that may not have a default export declared. 
         Useful for many older or commonjs-based libraries. */
      "allowSyntheticDefaultImports": true,
  
      /* Skips type checking of .d.ts files from your node_modules to speed up builds. 
         If you want to strictly check everything, set this to false. */
      "skipLibCheck": true
    },
  
    /* Include all TypeScript files in "src" and "dev" folders. 
       Adjust these globs as needed for your project. */
    "include": [
      "src/**/*",
      "dev/**/*"
    ],
  
    /* Exclude node_modules, dist folder, etc., from compilation. */
    "exclude": [
      "node_modules",
      "dist"
    ]
}
  